{"version":3,"sources":["../../src/apis/flickr.js"],"names":["FlickrAPI","key","url","method","parameters","query","stringify","Object","assign","api_key","format","nojsoncallback","json"],"mappings":";;;;;;;;AAAA;;;;AACA;;;;;;;;IAEMA,S;AACJ,qBAAYC,GAAZ,EAAiB;AAAA;;AACf,SAAKA,GAAL,GAAWA,GAAX;AACA,SAAKC,GAAL,GAAW,sCAAX;AACD;;;;0BAEKC,M,EAAQC,U,EAAY;AACxB,UAAIC,QAAQ,aAAGC,SAAH,CAAaC,OAAOC,MAAP,CAAc;AACrCC,iBAAS,KAAKR,GADuB;AAErCE,gBAAQ,YAAYA,MAFiB;AAGrCO,gBAAQ,MAH6B;AAIrCC,wBAAgB;AAJqB,OAAd,EAKtBP,UALsB,CAAb,CAAZ;;AAOA,aAAO,8BAAG;AACRF,aAAK,KAAKA,GAAL,GAAW,GAAX,GAAiBG,KADd;AAERO,cAAM;AAFE,OAAH,CAAP;AAID;;;;;;kBAGYZ,S","file":"flickr.js","sourcesContent":["import qs from 'qs';\nimport rp from 'request-promise';\n\nclass FlickrAPI {\n  constructor(key) {\n    this.key = key;\n    this.url = 'https://api.flickr.com/services/rest';\n  }\n\n  query(method, parameters) {\n    let query = qs.stringify(Object.assign({\n      api_key: this.key,\n      method: 'flickr.' + method,\n      format: 'json',\n      nojsoncallback: 1\n    }, parameters));\n\n    return rp({\n      url: this.url + '?' + query,\n      json: true\n    });\n  }\n}\n\nexport default FlickrAPI"]}