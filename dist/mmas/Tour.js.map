{"version":3,"sources":["../../src/mmas/Tour.js"],"names":["Tour","graph","_graph","_tour","_distance","_value","length","vertex","tourIndex","isEqual","push","value","size","distance","timeSpendAtAttraction","i","getEdge","getDistance","getLast"],"mappings":";;;;;;;;AAAA;;;;;;;;IAEMA,I;AACJ,gBAAYC,KAAZ,EAAmB;AAAA;;AACjB,SAAKC,MAAL,GAAcD,KAAd;AACA,SAAKE,KAAL,GAAa,EAAb;AACA,SAAKC,SAAL,GAAiB,IAAjB;AACA,SAAKC,MAAL,GAAc,CAAd;AACD;;;;2BAEM;AACL,aAAO,KAAKF,KAAL,CAAWG,MAAlB;AACD;;;6BAMQC,M,EAAQ;AACf,WAAK,IAAIC,SAAT,IAAsB,KAAKL,KAA3B,EAAkC;AAChC,YAAII,OAAOE,OAAP,CAAe,KAAKN,KAAL,CAAWK,SAAX,CAAf,CAAJ,EAA2C;AACzC,iBAAO,IAAP;AACD;AACF;;AAED,aAAO,KAAP;AACD;;;8BAESD,M,EAAQ;AAChB,WAAKH,SAAL,GAAiB,IAAjB;AACA,WAAKD,KAAL,CAAWO,IAAX,CAAgBH,MAAhB;AACA,WAAKF,MAAL,IAAeE,OAAOI,KAAtB;AACD;;;wBAEGH,S,EAAW;AACb,aAAO,KAAKL,KAAL,CAAWK,SAAX,CAAP;AACD;;;8BAES;AACR,aAAO,KAAKL,KAAL,CAAW,KAAKS,IAAL,KAAc,CAAzB,CAAP;AACD;;;+BAEU;AACT,UAAI,KAAKR,SAAL,IAAkB,IAAtB,EAA4B;AAC1B,YAAIS,WAAW,GAAf;AACA,YAAIC,wBAAwB,IAA5B,CAF0B,CAEQ;;AAElC,aAAK,IAAIC,IAAI,CAAb,EAAgBA,IAAI,KAAKZ,KAAL,CAAWG,MAA/B,EAAuCS,GAAvC,EAA4C;AAC1CF,sBAAY,KAAKX,MAAL,CAAYc,OAAZ,CAAoB,KAAKb,KAAL,CAAWY,IAAI,CAAf,CAApB,EAAuC,KAAKZ,KAAL,CAAWY,CAAX,CAAvC,EAAsDE,WAAtD,EAAZ;AACD;;AAED,YAAI,iBAAER,OAAF,CAAU,KAAKN,KAAL,CAAW,CAAX,CAAV,EAAyB,KAAKe,OAAL,EAAzB,CAAJ,EAA8C;AAC5CL,sBAAYC,yBAAyB,KAAKX,KAAL,CAAWG,MAAX,GAAoB,CAA7C,CAAZ;AACD,SAFD,MAEO;AACLO,sBAAYC,yBAAyB,KAAKX,KAAL,CAAWG,MAAX,GAAoB,CAA7C,CAAZ;AACD;;AAED,aAAKF,SAAL,GAAiBS,QAAjB;AACD;;AAED,aAAO,KAAKT,SAAZ;AACD;;;wBA/CW;AACV,aAAO,KAAKC,MAAZ;AACD;;;;;;kBAgDYL,I","file":"Tour.js","sourcesContent":["import _ from 'lodash';\n\nclass Tour {\n  constructor(graph) {\n    this._graph = graph;\n    this._tour = [];\n    this._distance = null;\n    this._value = 0;\n  }\n\n  size() {\n    return this._tour.length;\n  }\n\n  get value() {\n    return this._value;\n  }\n\n  contains(vertex) {\n    for (var tourIndex in this._tour) {\n      if (vertex.isEqual(this._tour[tourIndex])) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  addVertex(vertex) {\n    this._distance = null;\n    this._tour.push(vertex);\n    this._value += vertex.value;\n  }\n\n  get(tourIndex) {\n    return this._tour[tourIndex];\n  }\n\n  getLast() {\n    return this._tour[this.size() - 1];\n  }\n\n  distance() {\n    if (this._distance == null) {\n      let distance = 0.0;\n      let timeSpendAtAttraction = 2500; // 30 mins\n\n      for (var i = 1; i < this._tour.length; i++) {\n        distance += this._graph.getEdge(this._tour[i - 1], this._tour[i]).getDistance();\n      }\n\n      if (_.isEqual(this._tour[0], this.getLast())) {\n        distance += timeSpendAtAttraction * (this._tour.length - 2);\n      } else {\n        distance += timeSpendAtAttraction * (this._tour.length - 1);\n      }\n\n      this._distance = distance;\n    }\n\n    return this._distance;\n  }\n}\n\nexport default Tour;"]}