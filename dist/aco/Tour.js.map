{"version":3,"sources":["../../src/aco/Tour.js"],"names":["Tour","graph","_graph","_tour","_distance","length","vertex","tourIndex","isEqual","push","size","distance","edge","getEdge","getDistance"],"mappings":";;;;;;;;;;IAAMA,I;AACJ,gBAAYC,KAAZ,EAAmB;AAAA;;AACjB,SAAKC,MAAL,GAAcD,KAAd;AACA,SAAKE,KAAL,GAAa,EAAb;AACA,SAAKC,SAAL,GAAiB,IAAjB;AACD;;;;2BAEM;AACL,aAAO,KAAKD,KAAL,CAAWE,MAAlB;AACD;;;6BAEQC,M,EAAQ;AACf,WAAK,IAAIC,SAAT,IAAsB,KAAKJ,KAA3B,EAAkC;AAChC,YAAIG,OAAOE,OAAP,CAAe,KAAKL,KAAL,CAAWI,SAAX,CAAf,CAAJ,EAA2C;AACzC,iBAAO,IAAP;AACD;AACF;;AAED,aAAO,KAAP;AACD;;;8BAESD,M,EAAQ;AAChB,WAAKF,SAAL,GAAiB,IAAjB;AACA,WAAKD,KAAL,CAAWM,IAAX,CAAgBH,MAAhB;AACD;;;wBAEGC,S,EAAW;AACb,aAAO,KAAKJ,KAAL,CAAWI,SAAX,CAAP;AACD;;;8BAES;AACR,aAAO,KAAKJ,KAAL,CAAW,KAAKO,IAAL,KAAc,CAAzB,CAAP;AACD;;;+BAEU;AACT,UAAI,KAAKN,SAAL,KAAmB,IAAvB,EAA6B;AAC3B,YAAIO,WAAW,GAAf;AAAA,YAAoBC,aAApB;;AAEA,aAAK,IAAIL,YAAY,CAArB,EAAwBA,YAAY,KAAKJ,KAAL,CAAWE,MAA/C,EAAuDE,WAAvD,EAAoE;AAClE,cAAIA,aAAa,KAAKJ,KAAL,CAAWE,MAAX,GAAoB,CAArC,EAAwC;AACtCO,mBAAO,KAAKV,MAAL,CAAYW,OAAZ,CAAoB,KAAKV,KAAL,CAAWI,SAAX,CAApB,EAA2C,KAAKJ,KAAL,CAAW,CAAX,CAA3C,CAAP;AACAQ,wBAAYC,KAAKE,WAAL,EAAZ;AACD,WAHD,MAGO;AACLF,mBAAO,KAAKV,MAAL,CAAYW,OAAZ,CAAoB,KAAKV,KAAL,CAAWI,SAAX,CAApB,EAA2C,KAAKJ,KAAL,CAAWI,YAAY,CAAvB,CAA3C,CAAP;AACAI,wBAAYC,KAAKE,WAAL,EAAZ;AACD;AACF;;AAED,aAAKV,SAAL,GAAiBO,QAAjB;AACD;;AAED,aAAO,KAAKP,SAAZ;AACD;;;;;;kBAGYJ,I","file":"Tour.js","sourcesContent":["class Tour {\r\n  constructor(graph) {\r\n    this._graph = graph;\r\n    this._tour = [];\r\n    this._distance = null;\r\n  }\r\n\r\n  size() {\r\n    return this._tour.length;\r\n  }\r\n\r\n  contains(vertex) {\r\n    for (var tourIndex in this._tour) {\r\n      if (vertex.isEqual(this._tour[tourIndex])) {\r\n        return true;\r\n      }\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  addVertex(vertex) {\r\n    this._distance = null;\r\n    this._tour.push(vertex);\r\n  }\r\n\r\n  get(tourIndex) {\r\n    return this._tour[tourIndex];\r\n  }\r\n\r\n  getLast() {\r\n    return this._tour[this.size() - 1];\r\n  }\r\n\r\n  distance() {\r\n    if (this._distance === null) {\r\n      let distance = 0.0, edge;\r\n\r\n      for (var tourIndex = 0; tourIndex < this._tour.length; tourIndex++) {\r\n        if (tourIndex >= this._tour.length - 1) {\r\n          edge = this._graph.getEdge(this._tour[tourIndex], this._tour[0]);\r\n          distance += edge.getDistance();\r\n        } else {\r\n          edge = this._graph.getEdge(this._tour[tourIndex], this._tour[tourIndex + 1]);\r\n          distance += edge.getDistance();\r\n        }\r\n      }\r\n\r\n      this._distance = distance;\r\n    }\r\n\r\n    return this._distance;\r\n  }\r\n}\r\n\r\nexport default Tour;"]}