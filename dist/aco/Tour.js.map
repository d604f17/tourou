{"version":3,"sources":["../../src/aco/Tour.js"],"names":["Tour","graph","_graph","_tour","_distance","_value","length","vertex","tourIndex","isEqual","push","value","size","distance","edge","getEdge","getDistance"],"mappings":";;;;;;;;;;IAAMA,I;AACJ,gBAAYC,KAAZ,EAAmB;AAAA;;AACjB,SAAKC,MAAL,GAAcD,KAAd;AACA,SAAKE,KAAL,GAAa,EAAb;AACA,SAAKC,SAAL,GAAiB,IAAjB;AACA,SAAKC,MAAL,GAAc,CAAd;AACD;;;;2BAEM;AACL,aAAO,KAAKF,KAAL,CAAWG,MAAlB;AACD;;;6BAMQC,M,EAAQ;AACf,WAAK,IAAIC,SAAT,IAAsB,KAAKL,KAA3B,EAAkC;AAChC,YAAII,OAAOE,OAAP,CAAe,KAAKN,KAAL,CAAWK,SAAX,CAAf,CAAJ,EAA2C;AACzC,iBAAO,IAAP;AACD;AACF;;AAED,aAAO,KAAP;AACD;;;8BAESD,M,EAAQ;AAChB,WAAKH,SAAL,GAAiB,IAAjB;AACA,WAAKD,KAAL,CAAWO,IAAX,CAAgBH,MAAhB;AACA,WAAKF,MAAL,IAAeE,OAAOI,KAAtB;AACD;;;wBAEGH,S,EAAW;AACb,aAAO,KAAKL,KAAL,CAAWK,SAAX,CAAP;AACD;;;8BAES;AACR,aAAO,KAAKL,KAAL,CAAW,KAAKS,IAAL,KAAc,CAAzB,CAAP;AACD;;;+BAEU;AACT,UAAI,KAAKR,SAAL,IAAkB,IAAtB,EAA4B;AAC1B,YAAIS,WAAW,GAAf;AAAA,YAAoBC,aAApB;;AAEA,aAAK,IAAIN,YAAY,CAArB,EAAwBA,YAAY,KAAKL,KAAL,CAAWG,MAA/C,EAAuDE,WAAvD,EAAoE;AAClE,cAAIA,aAAa,KAAKL,KAAL,CAAWG,MAAX,GAAoB,CAArC,EAAwC;AACtCQ,mBAAO,KAAKZ,MAAL,CAAYa,OAAZ,CAAoB,KAAKZ,KAAL,CAAWK,SAAX,CAApB,EAA2C,KAAKL,KAAL,CAAW,CAAX,CAA3C,CAAP;AACAU,wBAAYC,KAAKE,WAAL,EAAZ;AACD,WAHD,MAGO;AACLF,mBAAO,KAAKZ,MAAL,CAAYa,OAAZ,CAAoB,KAAKZ,KAAL,CAAWK,SAAX,CAApB,EAA2C,KAAKL,KAAL,CAAWK,YAAY,CAAvB,CAA3C,CAAP;AACAK,wBAAYC,KAAKE,WAAL,EAAZ;AACD;AACF;;AAED,aAAKZ,SAAL,GAAiBS,QAAjB;AACD;;AAED,aAAO,KAAKT,SAAZ;AACD;;;wBA9CW;AACV,aAAO,KAAKC,MAAZ;AACD;;;;;;kBA+CYL,I","file":"Tour.js","sourcesContent":["class Tour {\r\n  constructor(graph) {\r\n    this._graph = graph;\r\n    this._tour = [];\r\n    this._distance = null;\r\n    this._value = 0;\r\n  }\r\n\r\n  size() {\r\n    return this._tour.length;\r\n  }\r\n\r\n  get value() {\r\n    return this._value;\r\n  }\r\n\r\n  contains(vertex) {\r\n    for (var tourIndex in this._tour) {\r\n      if (vertex.isEqual(this._tour[tourIndex])) {\r\n        return true;\r\n      }\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  addVertex(vertex) {\r\n    this._distance = null;\r\n    this._tour.push(vertex);\r\n    this._value += vertex.value;\r\n  }\r\n\r\n  get(tourIndex) {\r\n    return this._tour[tourIndex];\r\n  }\r\n\r\n  getLast() {\r\n    return this._tour[this.size() - 1];\r\n  }\r\n\r\n  distance() {\r\n    if (this._distance == null) {\r\n      let distance = 0.0, edge;\r\n\r\n      for (var tourIndex = 0; tourIndex < this._tour.length; tourIndex++) {\r\n        if (tourIndex >= this._tour.length - 1) {\r\n          edge = this._graph.getEdge(this._tour[tourIndex], this._tour[0]);\r\n          distance += edge.getDistance();\r\n        } else {\r\n          edge = this._graph.getEdge(this._tour[tourIndex], this._tour[tourIndex + 1]);\r\n          distance += edge.getDistance();\r\n        }\r\n      }\r\n\r\n      this._distance = distance;\r\n    }\r\n\r\n    return this._distance;\r\n  }\r\n}\r\n\r\nexport default Tour;"]}