{"version":3,"sources":["../../src/aco/Edge.js"],"names":["Edge","vertexA","vertexB","_vertexA","_vertexB","_initPheromone","_pheromone","coordA","latitude","y","longitude","x","coordB","_distance","unit","vertex","pheromone"],"mappings":";;;;;;;;AAAA;;;;;;;;IAEMA,I;AACJ,gBAAYC,OAAZ,EAAqBC,OAArB,EAA8B;AAAA;;AAC5B,SAAKC,QAAL,GAAgBF,OAAhB;AACA,SAAKG,QAAL,GAAgBF,OAAhB;AACA,SAAKG,cAAL,GAAsB,CAAtB;AACA,SAAKC,UAAL,GAAkB,KAAKD,cAAvB;;AAEA,QAAME,SAAS,EAACC,UAAUP,QAAQQ,CAAnB,EAAsBC,WAAWT,QAAQU,CAAzC,EAAf;AACA,QAAMC,SAAS,EAACJ,UAAUN,QAAQO,CAAnB,EAAsBC,WAAWR,QAAQS,CAAzC,EAAf;AACA,SAAKE,SAAL,GAAiB,yBAAUN,MAAV,EAAkBK,MAAlB,EAA0B,EAACE,MAAM,OAAP,EAA1B,CAAjB;AACD;;;;6BAEQ;AACP,aAAO,EAAC,KAAK,KAAKX,QAAL,CAAcQ,CAApB,EAAuB,KAAK,KAAKR,QAAL,CAAcM,CAA1C,EAAP;AACD;;;6BAEQ;AACP,aAAO,EAAC,KAAK,KAAKL,QAAL,CAAcO,CAApB,EAAuB,KAAK,KAAKP,QAAL,CAAcK,CAA1C,EAAP;AACD;;;mCAEc;AACb,aAAO,KAAKH,UAAZ;AACD;;;kCAEa;AACZ,aAAO,KAAKO,SAAZ;AACD;;;6BAEQE,M,EAAQ;AACf,UAAI,KAAKZ,QAAL,CAAcQ,CAAd,IAAmBI,OAAOJ,CAA9B,EAAiC;AAC/B,eAAO,IAAP;AACD;;AAED,UAAI,KAAKP,QAAL,CAAcO,CAAd,IAAmBI,OAAOJ,CAA9B,EAAiC;AAC/B,eAAO,IAAP;AACD;;AAED,aAAO,KAAP;AACD;;;wCAEmBK,S,EAAW;AAC7B,WAAKX,cAAL,GAAsBW,SAAtB;AACD;;;iCAEYA,S,EAAW;AACtB,WAAKV,UAAL,GAAkBU,SAAlB;AACD;;;qCAEgB;AACf,WAAKV,UAAL,GAAkB,KAAKD,cAAvB;AACD;;;;;;kBAGYL,I","file":"Edge.js","sourcesContent":["import haversine from 'haversine';\r\n\r\nclass Edge {\r\n  constructor(vertexA, vertexB) {\r\n    this._vertexA = vertexA;\r\n    this._vertexB = vertexB;\r\n    this._initPheromone = 1;\r\n    this._pheromone = this._initPheromone;\r\n\r\n    const coordA = {latitude: vertexA.y, longitude: vertexA.x};\r\n    const coordB = {latitude: vertexB.y, longitude: vertexB.x};\r\n    this._distance = haversine(coordA, coordB, {unit: 'meter'});\r\n  }\r\n\r\n  pointA() {\r\n    return {'x': this._vertexA.x, 'y': this._vertexA.y};\r\n  }\r\n\r\n  pointB() {\r\n    return {'x': this._vertexB.x, 'y': this._vertexB.y};\r\n  }\r\n\r\n  getPheromone() {\r\n    return this._pheromone;\r\n  }\r\n\r\n  getDistance() {\r\n    return this._distance;\r\n  }\r\n\r\n  contains(vertex) {\r\n    if (this._vertexA.x == vertex.x) {\r\n      return true;\r\n    }\r\n\r\n    if (this._vertexB.x == vertex.x) {\r\n      return true;\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  setInitialPheromone(pheromone) {\r\n    this._initPheromone = pheromone;\r\n  }\r\n\r\n  setPheromone(pheromone) {\r\n    this._pheromone = pheromone;\r\n  }\r\n\r\n  resetPheromone() {\r\n    this._pheromone = this._initPheromone;\r\n  }\r\n}\r\n\r\nexport default Edge;"]}