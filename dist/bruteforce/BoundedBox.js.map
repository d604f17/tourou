{"version":3,"sources":["../../src/bruteforce/BoundedBox.js"],"names":["BoundedBox","nw","se","a","longitude","w","latitude","n","b","e","s","waypoints","minLat","minLon","maxLat","maxLon","Number","MAX_SAFE_INTEGER","MIN_SAFE_INTEGER","forEach","waypoint"],"mappings":";;;;;;;;AAAA;;;;;;;;IAEMA,U;AACJ,sBAAYC,EAAZ,EAAgBC,EAAhB,EAAoB;AAAA;;AAClB,SAAKD,EAAL,GAAUA,EAAV;AACA,SAAKC,EAAL,GAAUA,EAAV;AACD;;;;wBAEO;AACN,aAAO,KAAKD,EAAL,CAAQ,CAAR,CAAP;AACD;;;wBAEO;AACN,aAAO,KAAKA,EAAL,CAAQ,CAAR,CAAP;AACD;;;wBAEO;AACN,aAAO,KAAKC,EAAL,CAAQ,CAAR,CAAP;AACD;;;wBAEO;AACN,aAAO,KAAKA,EAAL,CAAQ,CAAR,CAAP;AACD;;;wBAEU;AACT,UAAMC,IAAI,EAACC,WAAW,KAAKC,CAAjB,EAAoBC,UAAU,KAAKC,CAAnC,EAAV;AACA,UAAMC,IAAI,EAACJ,WAAW,KAAKK,CAAjB,EAAoBH,UAAU,KAAKI,CAAnC,EAAV;AACA,aAAO,mBAASP,CAAT,EAAYK,CAAZ,CAAP;AACD;;;0CAE4BG,S,EAAW;AACtC,UAAIC,eAAJ;AAAA,UAAYC,eAAZ;AAAA,UAAoBC,eAApB;AAAA,UAA4BC,eAA5B;AACAH,eAASC,SAASG,OAAOC,gBAAzB;AACAH,eAASC,SAASC,OAAOE,gBAAzB;;AAEAP,gBAAUQ,OAAV,CAAkB,oBAAY;AAC5B,YAAIC,SAASd,QAAT,GAAoBM,MAAxB,EAAgCA,SAASQ,SAASd,QAAlB;AAChC,YAAIc,SAASd,QAAT,GAAoBQ,MAAxB,EAAgCA,SAASM,SAASd,QAAlB;AAChC,YAAIc,SAAShB,SAAT,GAAqBS,MAAzB,EAAiCA,SAASO,SAAShB,SAAlB;AACjC,YAAIgB,SAAShB,SAAT,GAAqBW,MAAzB,EAAiCA,SAASK,SAAShB,SAAlB;AAClC,OALD;;AAOA,aAAO,IAAIJ,UAAJ,CAAe,CAACa,MAAD,EAASC,MAAT,CAAf,EAAiC,CAACC,MAAD,EAASH,MAAT,CAAjC,CAAP;AACD;;;;;;kBAGYZ,U","file":"BoundedBox.js","sourcesContent":["import Edge from './Edge.js';\r\n\r\nclass BoundedBox {\r\n  constructor(nw, se) {\r\n    this.nw = nw;\r\n    this.se = se;\r\n  }\r\n\r\n  get n() {\r\n    return this.nw[1];\r\n  }\r\n\r\n  get w() {\r\n    return this.nw[0];\r\n  }\r\n\r\n  get s() {\r\n    return this.se[1];\r\n  }\r\n\r\n  get e() {\r\n    return this.se[0];\r\n  }\r\n\r\n  get edge() {\r\n    const a = {longitude: this.w, latitude: this.n};\r\n    const b = {longitude: this.e, latitude: this.s};\r\n    return new Edge(a, b);\r\n  }\r\n\r\n  static generateFromWaypoints(waypoints) {\r\n    let minLat, minLon, maxLat, maxLon;\r\n    minLat = minLon = Number.MAX_SAFE_INTEGER;\r\n    maxLat = maxLon = Number.MIN_SAFE_INTEGER;\r\n\r\n    waypoints.forEach(waypoint => {\r\n      if (waypoint.latitude < minLat) minLat = waypoint.latitude;\r\n      if (waypoint.latitude > maxLat) maxLat = waypoint.latitude;\r\n      if (waypoint.longitude < minLon) minLon = waypoint.longitude;\r\n      if (waypoint.longitude > maxLon) maxLon = waypoint.longitude;\r\n    });\r\n\r\n    return new BoundedBox([minLon, maxLat], [maxLon, minLat]);\r\n  }\r\n}\r\n\r\nexport default BoundedBox;"]}